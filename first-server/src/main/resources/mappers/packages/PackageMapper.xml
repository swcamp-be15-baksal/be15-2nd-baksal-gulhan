<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.hanhwa_tae.firstserver.packages.query.mapper.PackageMapper">

    <!-- 패키지 목록 조회 -->
    <select id="selectPackages" resultType="com.hanhwa_tae.firstserver.packages.query.dto.response.PackageDTO">
        SELECT
        p.package_id,
        p.title,
        p.price,
        p.area,
        p.start_date,
        p.end_date,
        COUNT(DISTINCT l.like_id) AS like_count,
        COUNT(DISTINCT r.review_id) AS review_count,
        ROUND(AVG(r.rating), 1) AS avg_rating
        FROM  package p
        LEFT JOIN `like` l on p.package_id = l.target_id AND l.target_type = 'PACKAGE'
        LEFT JOIN review r ON p.package_id = r.target_id AND r.target_type = 'PACKAGE' AND r.is_deleted = 'N'
        <where>
            p.is_deleted = 'N'
            <if test="area != null">
                area = #{area}
            </if>
            <if test="startDate != null">
                AND start_date &gt;= #{startDate}
            </if>
            <if test="endDate != null">
                AND end_date &lt;= #{endDate}
            </if>
            <if test="title != null">
                AND title LIKE CONCAT('%', #{ title }, '%')
            </if>
        </where>
        GROUP BY p.package_id
        <choose>
            <when test="sort == 'like'">
                ORDER BY like_count DESC
            </when>
            <when test="sort == 'review'">
                ORDER BY review_count DESC
            </when>
            <otherwise>
                ORDER BY p.start_date ASC
            </otherwise>
        </choose>
        LIMIT #{limit} OFFSET #{offset}
    </select>

    <!-- 목록 개수 조회 -->
    <select id="countPackages" resultType="long">
        SELECT COUNT(*) FROM (
        SELECT p.package_id
        FROM package p
        LEFT JOIN `like` l ON p.package_id = l.target_id AND l.target_type = 'PACKAGE'
        LEFT JOIN review r ON p.package_id = r.target_id AND r.target_type = 'PACKAGE' AND r.is_deleted = 'N'
        <where>
            p.is_deleted = 'N'
            <if test="area != null">
                AND p.area = #{area}
            </if>
            <if test="startDate != null">
                AND p.start_date &gt;= #{startDate}
            </if>
            <if test="endDate != null">
                AND p.end_date &lt;= #{endDate}
            </if>
            <if test="title != null">
                AND p.title LIKE CONCAT('%', #{title}, '%')
            </if>
        </where>
        GROUP BY p.package_id
        ) AS filtered_packages
    </select>



    <!-- 패키지 상세 조회 -->
    <select id="selectPackageById" resultType="com.hanhwa_tae.firstserver.packages.query.dto.response.PackageDTO">
        SELECT
            p.package_id,
            p.title,
            p.price,
            p.detail,
            p.capacity,
            p.current_regist,
            p.area,
            p.start_date,
            p.end_date,
            p.created_at,
            p.guide_name,
            p.guide_phone,
            COUNT(DISTINCT l.like_id) AS like_count,
            COUNT(DISTINCT r.review_id) AS review_count,
            ROUND(AVG(r.rating), 1) AS avg_rating
        FROM package p
        LEFT JOIN `like` l on p.package_id = l.target_id AND l.target_type = 'PACKAGE'
        LEFT JOIN review r ON p.package_id = r.target_id AND r.target_type = 'PACKAGE' AND r.is_deleted = 'N'
        WHERE p.package_id = #{packageId}
          AND p.is_deleted = 'N'
    </select>

    <select id="selectPackageNameById" resultType="String">
        select title
        from package
        where package_id = #{packageId}
    </select>

</mapper>
